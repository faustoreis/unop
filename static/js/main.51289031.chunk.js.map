{"version":3,"sources":["views/lista/index.js","views/formulario/deletar.js","views/formulario/incluir.js","views/formulario/index.js","urlParams.js","router.js","App.js","reportWebVitals.js","index.js"],"names":["useStylesPG","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","className","IconButton","onClick","event","disabled","aria-label","direction","Math","ceil","max","useStyles","table","minWidth","width","margin","textAlign","padding","container","maxHeight","select","icon","height","marginRight","color","link","display","head","fontWeight","backgroundColor","fabButton","position","bottom","right","Lista","data","localStorage","getItem","JSON","parse","setItem","stringify","dados","React","useState","setPage","setRowsPerPage","rows","setRows","allRows","filtroUnop","setUnop","filtroSituacao","setSituacao","emptyRows","min","length","pesquisar","valorUnop","valorSituacao","data_filter","isNaN","parseInt","filter","element","nome","substr","toLowerCase","situacao","codigo","updateData","Deletar","open","setOpen","fechar","Button","style","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","posicao","database","map","rec","idx","splice","autoFocus","Paper","Breadcrumbs","Link","href","Typography","variant","TextField","onChange","ev","target","value","fullWidth","label","InputProps","endAdornment","InputAdornment","FormControl","InputLabel","htmlFor","Select","native","TableContainer","component","Table","TableHead","TableRow","TableCell","align","TableBody","slice","row","scope","cod","window","location","name","colSpan","TableFooter","TablePagination","labelRowsPerPage","labelDisplayedRows","from","to","rowsPerPageOptions","SelectProps","inputProps","newPage","onChangeRowsPerPage","ActionsComponent","Fab","state","this","setState","upDate","abrir","remover","Component","Incluir","descricao","lista","push","marginTop","marginBottom","setar","type","InputLabelProps","shrink","size","adiconar","title","Formulario","FormCadastro","json","endpointStr","parametro","undefined","indexOf","arrParam","split","item","valor","jsonTxt","finalJson","elm","substring","urlParams","search","removeItem","todosDados","acao","openTurno","cnpj","turnos","restaurantes","feriados","turno","campo","checked","toString","replace","required","helperText","error","FormControlLabel","control","Checkbox","Grid","xs","rowTurnos","idxTurno","atualizarTurno","paper","rowRestaurantes","idxRestaurantes","atualizarRestaurantes","rowFeriados","idxFeriados","Intl","DateTimeFormat","format","Date","atualizarFeriados","button","salvar","Routes","basename","process","path","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51289031.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Link from \"@material-ui/core/Link\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport dados from \"../data/dados.json\";\n\nconst useStylesPG = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStylesPG();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 500,\n  },\n  root: {\n    width: \"90%\",\n    margin: \"15px\",\n    textAlign: \"left\",\n    padding: \"15px\",\n  },\n  container: {\n    maxHeight: \"100%\",\n  },\n  select: {\n    width: \"150px\",\n  },\n  icon: {\n    width: 20,\n    height: 20,\n    marginRight: \"10px\",\n    color: \"#FFA500\",\n  },\n  link: {\n    display: \"flex\",\n    marginRight: \"10px\",\n  },\n  head: {\n    fontWeight: \"bold\",\n    backgroundColor: \"#DCDCDC\",\n  },\n  fabButton: {\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst Lista = () => {\n  var data = [];\n  if (localStorage.getItem(\"dados\")) {\n    data = JSON.parse(localStorage.getItem(\"dados\"));\n  } else {\n    localStorage.setItem(\"dados\", JSON.stringify(dados));\n  }\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = React.useState(data);\n  const [allRows] = React.useState(data);\n  const [filtroUnop, setUnop] = React.useState(\"\");\n  const [filtroSituacao, setSituacao] = React.useState(\"\");\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  function pesquisar(valorUnop, valorSituacao) {\n    setUnop(valorUnop);\n    setSituacao(valorSituacao);\n    let data_filter;\n    if (valorUnop !== \"\" || valorSituacao !== \"\") {\n      if (isNaN(parseInt(valorUnop))) {\n        data_filter = allRows.filter(\n          (element) =>\n            (valorUnop === \"\"\n              ? true\n              : element.nome.substr(0, valorUnop.length).toLowerCase() ===\n                valorUnop.toLowerCase()) &&\n            (valorSituacao === \"\" ? true : element.situacao === valorSituacao)\n        );\n      } else {\n        data_filter = allRows.filter(\n          (element) =>\n            (filtroUnop === \"\"\n              ? true\n              : element.codigo === parseInt(valorUnop)) &&\n            (valorSituacao === \"\" ? true : element.situacao === valorSituacao)\n        );\n      }\n      updateData(data_filter);\n    } else {\n      updateData(data_filter);\n    }\n  }\n\n  const updateData = (data) => {\n    setRows(data);\n  };\n\n  const Deletar = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const [dados] = React.useState(JSON.parse(JSON.stringify(rows)));\n\n    const abrir = () => {\n      setOpen(true);\n    };\n\n    const fechar = () => {\n      setOpen(false);\n    };\n\n    const remover = () => {\n      let database = dados;\n      let posicao;\n      database.map((rec, idx) => {\n        if (rec.codigo === parseInt(props.id)) {\n          posicao = idx;\n        }\n        return \"\";\n      });\n      database.splice(posicao, 1);\n      setRows(database);\n      localStorage.setItem(\"dados\", JSON.stringify(database));\n      fechar();\n    };\n\n    return (\n      <div>\n        <Button onClick={abrir}>\n          <DeleteOutlineIcon style={{ color: \"red\" }} />\n        </Button>\n        <Dialog\n          open={open}\n          onClose={fechar}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Excluir</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Se confirmar os dados do restaurante serão excluidos\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={fechar} color=\"primary\">\n              Cancelar\n            </Button>\n            <Button onClick={remover} color=\"primary\" autoFocus>\n              Confirmar\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  };\n\n  const abriAdd = () => {\n    window.location.href = \"/#/formulario\";\n  };\n\n  const abriEdit = (cod) => {\n    window.location.href = \"/#/formulario?id=\" + cod;\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        <Link color=\"inherit\" href=\"/\">\n          <HomeIcon className={classes.icon} />\n          Home\n        </Link>\n        <Link color=\"inherit\" href=\"/\" className={classes.link}>\n          Titulo menu\n        </Link>\n        <Typography color=\"textPrimary\" className={classes.link}>\n          Lista de UNOPs\n        </Typography>\n      </Breadcrumbs>\n      <Typography variant=\"h4\" style={{ textAlign: \"left\" }}>\n        Lista de UNOPs\n      </Typography>\n      <TextField\n        onChange={(ev) => pesquisar(ev.target.value, filtroSituacao)}\n        fullWidth\n        style={{ textAlign: \"left\", margin: \"5px\" }}\n        label=\"Pesquisar UNOP\"\n        variant=\"outlined\"\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <SearchIcon style={{ color: \"#FFA500\" }} />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <FormControl variant=\"outlined\" style={{ margin: \"5px\" }}>\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Situação</InputLabel>\n        <Select\n          className={classes.select}\n          native\n          onChange={(ev) => pesquisar(filtroUnop, ev.target.value)}\n          label=\"Situação\"\n        >\n          <option value=\"\" />\n          <option value={\"Ativo\"}>Ativo</option>\n          <option value={\"Inativo\"}>Inativo</option>\n        </Select>\n      </FormControl>\n      <Typography variant=\"h6\" style={{ textAlign: \"left\" }}>\n        Lista de UNOPs\n      </Typography>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"custom pagination table\">\n          <TableHead>\n            <TableRow>\n              <TableCell className={classes.head}>UNOP</TableCell>\n              <TableCell className={classes.head} align=\"center\">\n                Código da UNOP\n              </TableCell>\n              <TableCell className={classes.head} align=\"center\">\n                Situação\n              </TableCell>\n              <TableCell className={classes.head} align=\"center\">\n                Edição\n              </TableCell>\n              <TableCell className={classes.head} align=\"center\">\n                Exclusão\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(rowsPerPage > 0\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              : rows\n            ).map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.nome}\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"center\">\n                  {row.codigo}\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"center\">\n                  {row.situacao}\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"center\">\n                  <Button onClick={() => abriEdit(row.codigo)}>\n                    <EditIcon />\n                  </Button>\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"center\">\n                  <Deletar id={row.codigo} rows={rows} />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                labelRowsPerPage=\"Linhas por página:\"\n                labelDisplayedRows={({ from, to, count }) =>\n                  `${from}-${to} \n                    de ${count !== -1 ? count : `mais que ${to}`}`\n                }\n                rowsPerPageOptions={[5, 10, 15]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n      <Fab\n        color=\"secondary\"\n        aria-label=\"add\"\n        className={classes.fabButton}\n        onClick={() => abriAdd()}\n      >\n        <AddIcon />\n      </Fab>\n    </Paper>\n  );\n};\n\nexport default Lista;\n","import React, { Component } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\n\nclass Deletar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n  }\n  abrir() {\n    this.setState({ open: true });\n  }\n\n  fechar() {\n    this.setState({ open: false });\n  }\n\n  remover() {\n    let database = this.props.dados;\n    database.splice(this.props.posicao, 1);\n    this.props.upDate(database);\n    this.fechar();\n  }\n\n  render() {\n    return (\n      <div>\n        <Button onClick={() => this.abrir()}>\n          <DeleteOutlineIcon style={{ color: \"red\" }} />\n        </Button>\n        <Dialog\n          open={this.state.open}\n          onClose={() => this.fechar()}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Excluir</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Se confirmar os dados serão excluidos\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.fechar()} color=\"primary\">\n              Cancelar\n            </Button>\n            <Button onClick={() => this.remover()} color=\"primary\" autoFocus>\n              Confirmar\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\nDeletar.propTypes = {\n  upDate: PropTypes.func,\n};\nexport default Deletar;\n","import React, { Component } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Incluir extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      descricao: \"\",\n    };\n  }\n  abrir() {\n    this.setState({ open: true });\n  }\n\n  fechar() {\n    this.setState({ open: false });\n  }\n\n  adiconar() {\n    let database = this.props.dados;\n    if (this.props.lista === \"Feriado\") {\n      database.push({ data: this.state.descricao + \" 00:00:00\" });\n    } else {\n      database.push({ descricao: this.state.descricao });\n    }\n    this.props.upDate(database);\n    this.fechar();\n  }\n\n  setar(ev) {\n    this.setState({ descricao: ev.target.value });\n  }\n\n  render() {\n    return (\n      <div style={{ display: \"flex\" }}>\n        <Button\n          variant=\"contained\"\n          onClick={() => this.abrir()}\n          style={{\n            color: \"#FFFFFF\",\n            backgroundColor: \"#1C1C1C\",\n            marginLeft: \"auto\",\n            marginTop: \"20px\",\n            marginRight: \"20px\",\n            marginBottom: \"20px\",\n            width: \"250px\",\n          }}\n        >\n          {\"Incluir \" + this.props.lista}\n        </Button>\n        <Dialog\n          open={this.state.open}\n          onClose={() => this.fechar()}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Incluir</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {this.props.lista === \"Feriado\" ? (\n                <TextField\n                  onChange={(ev) => this.setar(ev)}\n                  id=\"date\"\n                  label=\"Feriado\"\n                  type=\"date\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n              ) : (\n                <TextField\n                  onChange={(ev) => this.setar(ev)}\n                  size=\"small\"\n                  style={{ textAlign: \"left\", margin: \"5px\", width: \"98%\" }}\n                  label={\"Descrição do \" + this.props.lista}\n                  variant=\"outlined\"\n                />\n              )}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.fechar()} color=\"primary\">\n              Cancelar\n            </Button>\n            <Button onClick={() => this.adiconar()} color=\"primary\" autoFocus>\n              Confirmar\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\nIncluir.propTypes = {\n  upDate: PropTypes.func,\n};\nexport default Incluir;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Link from \"@material-ui/core/Link\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { urlParams } from \"../../urlParams\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport Deletar from \"./deletar\";\nimport Incluir from \"./incluir\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"90%\",\n    margin: \"15px\",\n    textAlign: \"left\",\n    padding: \"15px\",\n  },\n  container: {\n    maxHeight: \"100%\",\n  },\n  icon: {\n    width: 20,\n    height: 20,\n    marginRight: \"10px\",\n    color: \"#FFA500\",\n  },\n  link: {\n    display: \"flex\",\n    marginRight: \"10px\",\n  },\n  table: {\n    minWidth: \"90%\",\n    width: \"90%\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n  head: {\n    fontWeight: \"bold\",\n    backgroundColor: \"#DCDCDC\",\n  },\n  title: {\n    margin: \"10px\",\n    color: \"#4F4F4F\",\n    textAlign: \"left\",\n  },\n});\n\nfunction Formulario(props) {\n  const classes = useStyles();\n\n  class FormCadastro extends React.Component {\n    constructor(props) {\n      super(props);\n      let parametro = props.location.search;\n      let json = urlParams(parametro);\n      localStorage.removeItem(\"posicao\");\n      this.state = {\n        dados: this.dados(json),\n        todosDados: this.dados(json),\n        acao: json === \"Endpoint inválido\" ? \"add\" : \"edit\",\n        openTurno: false,\n      };\n    }\n\n    salvar() {\n      let database = JSON.parse(localStorage.getItem(\"dados\"));\n      if (this.state.acao === \"add\") {\n        database.push(this.state.dados);\n      } else {\n        database[localStorage.getItem(\"posicao\")] = this.state.dados;\n      }\n      localStorage.setItem(\"dados\", JSON.stringify(database));\n      window.location.href = \"/\";\n    }\n\n    dados(json) {\n      let dados;\n      if (json === \"Endpoint inválido\") {\n        dados = {\n          codigo: \"\",\n          nome: \"\",\n          cnpj: \"\",\n          situacao: \"Ativo\",\n          turnos: [],\n          restaurantes: [],\n          feriados: [],\n        };\n      } else {\n        let database = JSON.parse(localStorage.getItem(\"dados\"));\n        let posicao;\n        database.map((rec, idx) => {\n          if (rec.codigo === parseInt(json[1])) {\n            posicao = idx;\n          }\n          return \"\";\n        });\n        dados = database[posicao];\n        localStorage.setItem(\"posicao\", posicao);\n      }\n      return dados;\n    }\n\n    atualizarTurno(dados) {\n      var rec = this.state.dados;\n      rec.turno = dados;\n      this.setState({ dados: rec, todosDados: rec });\n    }\n\n    atualizarRestaurantes(dados) {\n      var rec = this.state.dados;\n      rec.restaurantes = dados;\n      this.setState({ dados: rec, todosDados: rec });\n    }\n\n    atualizarFeriados(dados) {\n      var rec = this.state.dados;\n      rec.feriados = dados;\n      this.setState({ dados: rec, todosDados: rec });\n    }\n\n    pesquisar(valor, lista) {\n      let data_filter;\n      let data = this.state.dados;\n      let allRows =\n        lista === \"turnos\"\n          ? this.state.todosDados.turnos\n          : this.state.todosDados.restaurantes;\n      if (valor !== \"\") {\n        data_filter = allRows.filter((element) =>\n          valor === \"\"\n            ? true\n            : element.descricao.substr(0, valor.length).toLowerCase() ===\n              valor.toLowerCase()\n        );\n      } else {\n        data_filter = allRows;\n      }\n      if (lista === \"turnos\") {\n        data.turnos = data_filter;\n      } else {\n        data.restaurantes = data_filter;\n      }\n      this.setState({ dados: data });\n    }\n\n    setar(ev, campo) {\n      let data = this.state.dados;\n      if (campo === \"situacao\") {\n        data.situacao = ev.target.checked ? \"Ativo\" : \"Inativo\";\n      } else {\n        data[campo] = ev.target.value;\n      }\n      this.setState({ dados: data });\n    }\n\n    render() {\n      return (\n        <>\n          <Typography\n            variant=\"h4\"\n            style={{ textAlign: \"left\", marginBottom: \"1em\" }}\n          >\n            Configuração da UNOP\n          </Typography>\n          {this.state.acao === \"edit\" ? (\n            <Typography variant=\"h6\" style={{ textAlign: \"left\" }}>\n              {this.state.dados.codigo} - {this.state.dados.nome}\n            </Typography>\n          ) : (\n            \"\"\n          )}\n          {this.state.acao === \"edit\" ? (\n            <Typography variant=\"h6\" style={{ textAlign: \"left\" }}>\n              CNPJ:{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>\n                {(\"00000000000000\" + this.state.dados.cnpj.toString())\n                  .slice(-14)\n                  .replace(\n                    /(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/g,\n                    \"$1.$2.$3/$4-$5\"\n                  )}\n              </span>\n            </Typography>\n          ) : (\n            <div>\n              <TextField\n                onChange={(ev) => this.setar(ev, \"codigo\")}\n                size=\"small\"\n                style={{ textAlign: \"left\", margin: \"15px\" }}\n                label=\"Código\"\n                variant=\"outlined\"\n                required\n                helperText={\n                  this.state.dados.codigo === \"\" ? \"Campo obrigatório\" : \"\"\n                }\n                error={this.state.dados.codigo === \"\"}\n              />\n\n              <TextField\n                onChange={(ev) => this.setar(ev, \"nome\")}\n                size=\"small\"\n                style={{ textAlign: \"left\", margin: \"15px\", width: \"300px\" }}\n                label=\"Nome da UNOP\"\n                variant=\"outlined\"\n                helperText={\n                  this.state.dados.nome === \"\" ? \"Campo obrigatório\" : \"\"\n                }\n                error={this.state.dados.nome === \"\"}\n              />\n\n              <TextField\n                onChange={(ev) => this.setar(ev, \"cnpj\")}\n                size=\"small\"\n                style={{ textAlign: \"left\", margin: \"15px\", width: \"250px\" }}\n                label=\"CNPJ\"\n                variant=\"outlined\"\n                required\n                helperText={\n                  this.state.dados.cnpj === \"\" ? \"Campo obrigatório\" : \"\"\n                }\n                error={this.state.dados.cnpj === \"\"}\n              />\n            </div>\n          )}\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={this.state.dados.situacao === \"Ativo\" ? true : false}\n                onChange={(ev) => this.setar(ev, \"situacao\")}\n                name=\"situacao\"\n                color=\"primary\"\n              />\n            }\n            label=\"Ativa\"\n          />\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <Paper>\n                <Typography variant=\"h5\" className={classes.title}>\n                  Turnos\n                </Typography>\n                <TextField\n                  onChange={(ev) => this.pesquisar(ev.target.value, \"turnos\")}\n                  size=\"small\"\n                  style={{ textAlign: \"left\", margin: \"5px\", width: \"98%\" }}\n                  label=\"Pesquisar Turnos\"\n                  variant=\"outlined\"\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <SearchIcon style={{ color: \"#FFA500\" }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n                <TableContainer>\n                  <Table className={classes.table}>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell className={classes.head}>\n                          Turno selecionados\n                        </TableCell>\n                        <TableCell className={classes.head}></TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {this.state.dados.turnos.map((rowTurnos, idxTurno) => (\n                        <TableRow key={rowTurnos.turno}>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {rowTurnos.descricao}\n                          </TableCell>\n                          <TableCell style={{ width: 160 }} align=\"center\">\n                            <Deletar\n                              lista=\"turnos\"\n                              posicao={idxTurno}\n                              dados={this.state.dados.turnos}\n                              upDate={(dados) => this.atualizarTurno(dados)}\n                            />\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Incluir\n                  lista=\"turno\"\n                  dados={this.state.dados.turnos}\n                  upDate={(dados) => this.atualizarTurno(dados)}\n                />\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper className={classes.paper}>\n                <Typography variant=\"h5\" className={classes.title}>\n                  Restaurantes\n                </Typography>\n                <TextField\n                  onChange={(ev) =>\n                    this.pesquisar(ev.target.value, \"restaurantes\")\n                  }\n                  size=\"small\"\n                  style={{ textAlign: \"left\", margin: \"5px\", width: \"98%\" }}\n                  label=\"Pesquisar Restaurantes\"\n                  variant=\"outlined\"\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <SearchIcon style={{ color: \"#FFA500\" }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n                <TableContainer>\n                  <Table className={classes.table}>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell className={classes.head}>\n                          Restaurantes selecionados\n                        </TableCell>\n                        <TableCell className={classes.head}></TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {this.state.dados.restaurantes.map(\n                        (rowRestaurantes, idxRestaurantes) => (\n                          <TableRow key={rowRestaurantes.restaurantes}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {rowRestaurantes.descricao}\n                            </TableCell>\n                            <TableCell style={{ width: 160 }} align=\"center\">\n                              <Deletar\n                                lista=\"restaurantes\"\n                                posicao={idxRestaurantes}\n                                dados={this.state.dados.restaurantes}\n                                upDate={(dados) =>\n                                  this.atualizarRestaurantes(dados)\n                                }\n                              />\n                            </TableCell>\n                          </TableRow>\n                        )\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Incluir\n                  lista=\"Restaurante\"\n                  dados={this.state.dados.restaurantes}\n                  upDate={(dados) => this.atualizarRestaurantes(dados)}\n                />\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Typography variant=\"h5\" className={classes.title}>\n                  Configurar calendário da unidade\n                </Typography>\n                <TableContainer>\n                  <Table className={classes.table} style={{ width: \"95%\" }}>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell className={classes.head}>\n                          Dias selecionados\n                        </TableCell>\n                        <TableCell className={classes.head}></TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {this.state.dados.feriados.map(\n                        (rowFeriados, idxFeriados) => (\n                          <TableRow key={rowFeriados.feriados}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {new Intl.DateTimeFormat().format(\n                                new Date(rowFeriados.data)\n                              )}\n                            </TableCell>\n                            <TableCell style={{ width: 160 }} align=\"center\">\n                              <Deletar\n                                lista=\"feriados\"\n                                posicao={idxFeriados}\n                                dados={this.state.dados.feriados}\n                                upDate={(dados) =>\n                                  this.atualizarFeriados(dados)\n                                }\n                              />\n                            </TableCell>\n                          </TableRow>\n                        )\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Incluir\n                  lista=\"Feriado\"\n                  dados={this.state.dados.feriados}\n                  upDate={(dados) => this.atualizarFeriados(dados)}\n                />\n              </Paper>\n            </Grid>\n            <Button\n              variant=\"contained\"\n              className={classes.button}\n              style={{\n                color: \"#FFFFFF\",\n                backgroundColor: \"#1C1C1C\",\n                marginLeft: \"auto\",\n                marginTop: \"20px\",\n                marginRight: \"20px\",\n                marginBottom: \"20px\",\n                width: \"250px\",\n              }}\n              onClick={() => this.salvar()}\n              disabled={\n                this.state.dados.codigo === \"\" ||\n                this.state.dados.cnpj === \"\" ||\n                this.state.dados.nome === \"\"\n              }\n            >\n              Salvar\n            </Button>\n          </Grid>\n        </>\n      );\n    }\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        <Link color=\"inherit\" href=\"/#/\">\n          <HomeIcon className={classes.icon} />\n          Home\n        </Link>\n        <Link color=\"inherit\" href=\"/#/\" className={classes.link}>\n          Titulo menu\n        </Link>\n        <Typography color=\"textPrimary\" className={classes.link}>\n          Configuração de UNOP\n        </Typography>\n      </Breadcrumbs>\n      <FormCadastro {...props} />\n    </Paper>\n  );\n}\n\nexport default Formulario;\n","export function urlParams(endpointStr) {\n    var parametro = endpointStr;\n\n    if (parametro === undefined || parametro === \"\") return \"Endpoint inválido\";\n    if (parametro.indexOf(\"?\") === -1 || parametro.indexOf(\"=\") === -1) return \"Endpoint inválido\";\n\n    var arrParam = parametro.substr(parametro.indexOf('?')+1).split(\"&\");\n    var item = [];\n    var valor = [];\n    var jsonTxt = \"\";\n    var finalJson = [];\n\n    arrParam.map(elm => {\n      item.push(elm.split(\"=\")[0]);\n      valor.push(elm.split(\"=\")[1]);\n      return null;\n    });\n\n    item.map((elm,idx) => {\n      jsonTxt += '\"'+[elm]+'\":\"'+ valor[idx]+'\",'; \n      return null;     \n    });\n\n    jsonTxt = \"{\" + jsonTxt.substring(0, jsonTxt.length - 1) + \"}\";\n\n    finalJson.push(item);\n    finalJson.push(valor);\n    finalJson.push(JSON.parse(jsonTxt));\n\n    return finalJson;\n}","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport Lista from \"./views/lista\";\nimport Formulario from \"./views/formulario\";\n\nfunction Routes() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/\" exact component={Lista} />\n        <Route path=\"/formulario/\" component={Formulario} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Routes;\n","import \"./App.css\";\nimport Routes from \"./router\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}